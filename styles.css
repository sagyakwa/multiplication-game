:root {
    --primary-light: #8abdff;
    --primary: #6d5dfc;
    --primary-dark: #5b0eeb;
    --white: #fff;
    --greyLight-1: #e4ebf5;
    --greyLight-2: #c8d0e7;
    --greyLight-3: #bec8e4;
    --greyDark: #000000;
}

html, body {
    margin: 0;
    height: 100vh;
    width: 100vw;
    font-family: 'Roboto Condensed', sans-serif;
    background: var(--greyLight-1);
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.operand {
    font-size: 15rem;
    cursor: default;
    margin: 1rem;
}

#multiplication-symbol {
    font-size: 8rem;
}

.operand, #multiplication-symbol {

}

#operations-container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 20rem;
    position: relative;
}

.prevent-highlight {
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
}

#input-box {
    font-family: 'Roboto Condensed', sans-serif;
    font-size: 12rem;
    text-align: center;
    border: none;
    outline: none;
    color: #001c41;
    width: 35rem;
    background: var(--greyLight-1);
}

/* .speech-bubble is set as a child of #operations-container to make positioning
it easier. #speech-bubble is given an absolute position so that its
position is relative to the #operations-container (its parent). Its scale is
set to zero since it should only appear when the mouse hovers over
#operations-container. The 'animation-fill-mode' property is set to 'forwards'
so that  the scale value stays at 1 after the animation finishes,
otherwise  .speech-bubble will disappear once the animation finishes.
The 'animation-name' property is omitted since it's going to be
set by js instead */
.speech-bubble {
    position: absolute;
    transform-origin: 0 100%;
    text-align: center;
    font-size: 5rem;
    background-color: #5a5a5a;
    color: white;
    border-radius: 10px;
    width: 20rem;
    padding: 10px;
    left: 110px;
    top: -75px;
    transform: scale(0);
    animation-fill-mode: forwards;
    z-index: 600;
}

/* We need to add a tail to the speech bubble. This is done using
the ::before pseudo-element. The tail's size is controlled by
its borders. The right and bottom borders are given a transparent
color so that the tail still retains its shape while giving the
desired look */
.speech-bubble::before {
    content: "";
    display: block;
    width: 0;
    position: absolute;
    bottom: -25px;
    left: 5px;
    border-style: solid;
    border-width: 15px;
    border-color: rgba(19, 15, 12, 0.58) transparent transparent rgba(19, 15, 12, 0.45);
    transform: rotate(10deg);
}

/* Here the scale changes from 0 to 1. To add the bounciness
effect, the scale is set to 1.25 midway through the animation
to give the animation a nicer effect. */
@keyframes expand-bounce {
    0% {
        transform: scale(0);
    }
    50% {
        transform: scale(1.25);
    }
    100% {
        transform: scale(1);
    }
}

/* Here the scale simply goes from 1 back to 0 */
@keyframes shrink {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(0);
    }
}

/****** REMOVE ARROWS/SPINNERS FROM TEXT FIELDS ******/

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}

/***** NAV *****/

#nav {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    margin-top: 1rem;
    margin-bottom: 4rem;
}

/****** PLAY BUTTON ******/

#play-btn-container {
    display: grid;
    position: relative;
    width: 8rem;
    height: 8rem;
}

.circle {
    grid-column: 2/3;
    grid-row: 4/6;
    width: 9rem;
    height: 100%;
    justify-self: center;
    border-radius: 1rem;
    display: grid;
    grid-template-rows: 1fr;
    justify-items: center;
    align-items: center;
    position: absolute;
}

.circle__btn {
    grid-row: 1/2;
    grid-column: 1/2;
    width: 6rem;
    height: 6rem;
    display: flex;
    margin: 0.6rem;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    font-size: 3.2rem;
    color: var(--primary);
    z-index: 300;
    background: var(--greyLight-1);
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2), -0.2rem -0.2rem 0.5rem var(--white);
    cursor: pointer;
    position: relative;
    transition: all 0.5s ease;
}

.circle__btn .shadow {
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2), inset -0.2rem -0.2rem 0.5rem var(--white);
}

.circle__btn .play {
    position: absolute;
    opacity: 0;
    transition: all 0.2s linear;
}

.circle__btn .play.visibility {
    opacity: 1;
}

.circle__btn .pause {
    position: absolute;
    transition: all 0.2s linear;
}

.circle__btn .pause.visibility {
    opacity: 0;
}

.circle__back-1, .circle__back-2 {
    grid-row: 1/2;
    grid-column: 1/2;
    width: 6rem;
    height: 6rem;
    border-radius: 50%;
    filter: blur(1px);
    z-index: 100;
}

.circle__back-1 {
    box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2), -0.4rem -0.4rem 0.8rem var(--white);
    background: linear-gradient(to bottom right, var(--greyLight-2) 0%, var(--white) 100%);
    animation: waves 4s linear infinite;
}

.circle__back-1.paused {
    animation-play-state: paused;
}

.circle__back-2 {
    box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2), -0.4rem -0.4rem 0.8rem var(--white);
    animation: waves 4s linear 2s infinite;
}

.circle__back-2.paused {
    animation-play-state: paused;
}

/***** ICONS *****/

.icon {
    grid-column: 0.75;
    grid-row: 0.8;
    display: flex;
    justify-content: space-between;
}

.icon__settings {
    width: 7rem;
    height: 7rem;
    border-radius: 50%;
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2), -0.2rem -0.2rem 0.5rem var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3rem;
    cursor: pointer;
    color: var(--primary);
    transition: all 0.5s ease;
}

.icon__settings:active {
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2), inset -0.2rem -0.2rem 0.5rem var(--white);
}

.circle__btn:hover {
    transform: scale(1.15);
}

.icon__settings:hover {
    transform: scale(1.15);
    animation: spin 0.5s linear none;
}


@keyframes waves {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

@keyframes spin {
    0% {
        transform: rotate(120deg) scale(1.12);
    }
    50% {
        transform: rotate(240deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

